# personal C language snippets
# sorted alphabetically

snippet bk
{
	${1}
}
endsnippet

snippet case
case ${1:CONSTANT}:
	${2}
	break;
endsnippet

# debug macro
snippet debug
DEBUG${2}(("${1:\t}\n"${3}));${4}
endsnippet

snippet doc "generic doxygen doc"
/*! $0 */
endsnippet

snippet else
else
{
	${1}
}
endsnippet

snippet elif
else if ( ${1:/* condition */} ) {
	${2}
}
endsnippet

snippet foo "simple function"
${3:void} $1(${2:void})
{
	${7}
}
endsnippet

snippet foodoc "function documentation header" !b
/*! \brief ${1}

\param  ${2}
\return ${3}
*/
endsnippet

snippet ifndef
#ifdef ${1:FOO}
	${2:#define}	${3:$1}
#endif${4:/* #ifndef $1 */}{$5}
endsnippet

snippet ifdef
#ifdef ${1:FOO}
	${2:#define}	${3}
#endif${4:/* #ifdef $1 */}{$5}
endsnippet

snippet once "Include header once only guard"
#ifndef ${1:`!p
if not snip.c:
	import random, string
	name = re.sub(r'[^A-Za-z0-9]+','_', snip.fn).upper()
	rand = ''.join(random.sample(string.ascii_letters+string.digits, 8))
	snip.rv = ('__%s_%s__' % (name,rand)).upper()
else:
	snip.rv = snip.c`}
#define $1

${0}

#endif /* $1 */
endsnippet

snippet main "Full main boostrap" !b
#include <errno.h>
#include <math.h>  
#include <stdio.h> 
#include <stdlib.h>
#include <string.h>

int main ( int argc, char *argv[] )
{
	printf ("\nProgram %s\n\n", argv[0] );
	${1}

	return EXIT_SUCCESS;
}
endsnippet

snippet mdoc "member doxygen doc"
/*!< $0 */
endsnippet

snippet rem
/* ${1} */${2}
endsnippet
#
snippet switch
switch ( ${1:variable} )
{
case ${2:CONSTANT}:
	${3}
	break;

default:
	break;
}
endsnippet

snippet dox "Doxygen general comment"
/*! ${1} */${2}
endsnippet

snippet doxe "Doxygen enum comment"
/*!< ${1} */${2}
endsnippet

