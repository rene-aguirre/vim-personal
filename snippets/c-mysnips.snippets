#personal C language snippets
#function with documentation
snippet foo
	/****************************************************************************
	*  FUNCTION: ${1:new_function}
	*
	*  INPUTS  : ${4:none}
	*  OUTPUTS : ${5:none}
	*
	*  DESCRIPTION: ${6:$1 function description}
	****************************************************************************/
	${3:void} $1(${2:void})
	{
		${7}
	}
#
snippet case
	case ${1:CONSTANT}:
		${2}
		break;
#
snippet switch
	switch ( ${1:variable} )
	{
	case ${2:CONSTANT}:
		${3}
		break;

	default:
		break;
	}
# debug macro
snippet debug
	DEBUG${1}(("\t${2}\n"${3}));${4}
#
snippet defdebug
		#define DEBUG$1(x)		{printf x;}
#
snippet ifndef
	#ifdef ${1:FOO}
		${2:#define}	${3:$1}
	#endif${4:/* #ifndef $1 */}{$5}
#
snippet ifdef
	#ifdef ${1:FOO}
		${2:#define}	${3}
	#endif${4:/* #ifdef $1 */}{$5}
#
snippet else
	else
	{
		${1}
	}
#
snippet elif
	else if ( ${1:/* condition */} )
	{
		${2}
	}
#
snippet rem
	/* ${1} */${2}
#
snippet bk
	{
		${1}
	}
#
# For Loop
snippet for
	for (${1:i} ${2:= 0}; $1 ${3:< count}; ${3:$1++})
	{
		${4:/* code */}
	}
snippet	defonce
	#ifndef ${1:`'__'.toupper(Filename('', 'UNTITLED').'_'.substitute(system('python.exe -c "import random; print hex(int(random.random()*0xffffffffffffffff))[2:-1]"'), "\n*$", "", "")).'__'`}
	#define $1
	${2}
	#endif /* end of define: $1 */

